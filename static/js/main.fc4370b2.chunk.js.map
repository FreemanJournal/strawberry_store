{"version":3,"sources":["component/customer_management/OrderInfo.js","component/customer_management/CustomerManagement.js","App.js","reportWebVitals.js","index.js"],"names":["OrderInfo","onChangeHandler","index","deleteOrder","item","productName","productWeight","productUnit","unitPrice","className","value","name","onChange","e","disabled","hidden","type","size","onClick","CustomerManagement","initialState","useState","productData","setProductData","UpdateData","filter","i","target","updateOrder","map","product","isNaN","Number","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc4370b2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport * as MdIcons from \"react-icons/md\"\r\n\r\nexport default function OrderInfo({ onChangeHandler, index, deleteOrder, item }) {\r\n\r\n    const { productName, productWeight, productUnit, unitPrice } = item\r\n    \r\n    return (\r\n        <section className='customer'>\r\n            <form className='customer_form'>\r\n\r\n                <div className=\"customer_field\">\r\n                    <h3>Product Name</h3>\r\n                    <select\r\n                        className=\"customer_input\"\r\n                        value={productName}\r\n                        name='productName'\r\n                        onChange={(e) => onChangeHandler(e, index)}\r\n                    >\r\n                        <option value=\"\" disabled hidden>\r\n                            Product\r\n                        </option>\r\n                        <option value=\"Rice\">Rice</option>\r\n                        <option value=\"Sugar\">Sugar</option>\r\n                        <option value=\"Salt\">Salt</option>\r\n                        <option value=\"Onion\">Onion</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"customer_field\">\r\n                    <h3>Product Weight</h3>\r\n                    <span className='customer_input'>\r\n                        <input type=\"number\" value={productWeight} name='productWeight' onChange={(e) => onChangeHandler(e, index)} />\r\n                        <FaIcons.FaBalanceScaleLeft className='customer_icon' />\r\n                    </span>\r\n                </div>\r\n                <div className=\"customer_field\">\r\n                    <h3>Product Unit</h3>\r\n                    <select\r\n                        className=\"customer_input\"\r\n                        // defaultValue={'DEFAULT'}\r\n                        name='productUnit'\r\n                        value={productUnit}\r\n                        onChange={(e) => onChangeHandler(e, index)}\r\n                    >\r\n                        <option value=\"\" disabled hidden>\r\n                            Unit\r\n                        </option>\r\n                        <option value=\".001\">Gram</option>\r\n                        <option value=\"1\" >Kg</option>\r\n                        <option value=\"5\">Packet(5kg)</option>\r\n                        <option value=\"25\">Bag(25kg)</option>\r\n                        <option value=\"40\">Sack(40kg)</option>\r\n                        <option value=\"100\">Ton(100kg)</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"customer_field\">\r\n                    <h3>Unit Price</h3>\r\n                    <span className='customer_input'>\r\n                        <input type=\"number\" value={unitPrice} name='unitPrice' onChange={(e) => onChangeHandler(e, index)} />\r\n                        <MdIcons.MdAttachMoney className='customer_icon' />\r\n                    </span>\r\n                </div>\r\n                <div className=\"customer_field\">\r\n                    \r\n                    <span className='customer_input'>\r\n                        <MdIcons.MdDelete className='delete_icon' size=\"4ch\" onClick={() => deleteOrder(index)} />\r\n                    </span>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </section>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport OrderInfo from './OrderInfo';\r\nimport * as BsIcons from \"react-icons/bs\"\r\nimport \"./styles/styles.css\";\r\n\r\n\r\nexport default function CustomerManagement() {\r\n    const initialState = {\r\n        productName: \"\",\r\n        productWeight: \"\",\r\n        productUnit: \"\",\r\n        unitPrice: \"\",\r\n\r\n    }\r\n\r\n    const [productData, setProductData] = useState([initialState])\r\n\r\n    const createNewOrder = () => {\r\n        setProductData([\r\n            ...productData,\r\n            initialState\r\n        ])\r\n\r\n    }\r\n    const deleteOrder = (index) => {\r\n        const UpdateData = productData.filter((item, i) => i !== index)\r\n        setProductData(UpdateData)\r\n    }\r\n    const onChangeHandler = ({ target: { name, value } }, index) => {\r\n        const updateOrder = productData.map((product, i) => index === i ?\r\n            { ...product, [name]: isNaN(value) ? value : Number(value) } : product\r\n        )\r\n        setProductData(updateOrder)\r\n    }\r\n    const submitHandler = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <main className='customerOrder'>\r\n                <section>\r\n                    <div className=\"customer_field customer_name\">\r\n                        <h3>Customer Name</h3>\r\n                        <span className='customer_input'>\r\n                            <input type=\"text\" name='customerName' placeholder=\"Md Ishaque\" />\r\n                            <BsIcons.BsFillPersonPlusFill className='customer_icon' />\r\n                        </span>\r\n                    </div>\r\n                    {\r\n                        productData.map((item, index) => <OrderInfo key={index} onChangeHandler={onChangeHandler} index={index} deleteOrder={deleteOrder} item={item} />)\r\n                    }\r\n\r\n                </section>\r\n                <section className=\"addNewForm\">\r\n                    <button type='button' onClick={createNewOrder}>Add More</button>\r\n                    <button type='button' onClick={submitHandler}>Submit</button>\r\n                </section>\r\n\r\n\r\n            </main>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport CustomerManagement from './component/customer_management/CustomerManagement';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CustomerManagement />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}