{"version":3,"sources":["component/customer_management/OrderInfo.js","component/customer_management/images/logo.png","component/customer_management/ReceiptPDF.js","component/customer_management/CustomerManagement.js","App.js","reportWebVitals.js","index.js"],"names":["OrderInfo","onChangeHandler","index","deleteOrder","item","productName","productWeight","productUnit","unitPrice","className","value","name","onChange","e","disabled","hidden","type","size","onClick","ReceiptPDF","productData","customerName","TotalPrice","reduce","accumulator","currentValue","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","header","fontSize","marginBottom","textAlign","color","subHeader","display","flexDirection","justifyContent","tableHeader","padding","backgroundColor","borderRadius","tableCell","tableTotalCell","borderTop","tablePaidCell","headerImg","image","marginVertical","width","height","quantity","marginLeft","subTotal","Width","total","pageNumber","position","bottom","left","right","style","orientation","fixed","src","logo","subtitle","map","render","totalPages","CustomerManagement","initialState","useState","setProductData","viewPdf","setViewPdf","viewForm","setViewForm","UpdateData","filter","i","target","updateOrder","product","isNaN","Number","placeholder","prev","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4a31e66.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport * as MdIcons from \"react-icons/md\"\r\n\r\nexport default function OrderInfo({ onChangeHandler, index, deleteOrder, item }) {\r\n\r\n    const { productName, productWeight, productUnit, unitPrice } = item\r\n    \r\n    return (\r\n        <section className='customer'>\r\n            <form className='customer_form'>\r\n\r\n                <div className=\"customer_field\">\r\n                    <h3>Product Name</h3>\r\n                    <select\r\n                        className=\"customer_input\"\r\n                        value={productName}\r\n                        name='productName'\r\n                        onChange={(e) => onChangeHandler(e, index)}\r\n                    >\r\n                        <option value=\"\" disabled hidden>\r\n                            Product\r\n                        </option>\r\n                        <option value=\"Rice\">Rice</option>\r\n                        <option value=\"Sugar\">Sugar</option>\r\n                        <option value=\"Salt\">Salt</option>\r\n                        <option value=\"Onion\">Onion</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"customer_field\">\r\n                    <h3>Product Weight</h3>\r\n                    <span className='customer_input'>\r\n                        <input type=\"number\" value={productWeight} name='productWeight' onChange={(e) => onChangeHandler(e, index)} />\r\n                        <FaIcons.FaBalanceScaleLeft className='customer_icon' />\r\n                    </span>\r\n                </div>\r\n                <div className=\"customer_field\">\r\n                    <h3>Product Unit</h3>\r\n                    <select\r\n                        className=\"customer_input\"\r\n                        // defaultValue={'DEFAULT'}\r\n                        name='productUnit'\r\n                        value={productUnit}\r\n                        onChange={(e) => onChangeHandler(e, index)}\r\n                    >\r\n                        <option value=\"\" disabled hidden>\r\n                            Unit\r\n                        </option>\r\n                        <option value=\".001\">Gram</option>\r\n                        <option value=\"1\" >Kg</option>\r\n                        <option value=\"5\">Packet(5kg)</option>\r\n                        <option value=\"25\">Bag(25kg)</option>\r\n                        <option value=\"40\">Sack(40kg)</option>\r\n                        <option value=\"100\">Ton(100kg)</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"customer_field\">\r\n                    <h3>Unit Price</h3>\r\n                    <span className='customer_input'>\r\n                        <input type=\"number\" value={unitPrice} name='unitPrice' onChange={(e) => onChangeHandler(e, index)} />\r\n                        <MdIcons.MdAttachMoney className='customer_icon' />\r\n                    </span>\r\n                </div>\r\n                <div className=\"customer_field\">\r\n                    \r\n                    <span className='customer_input'>\r\n                        <MdIcons.MdDelete className='delete_icon' size=\"3ch\" onClick={() => deleteOrder(index)} />\r\n                    </span>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </section>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.94f3f0b7.png\";","import React from 'react'\r\nimport { Document, Font, Image, Line, Page, StyleSheet, Text, View } from \"@react-pdf/renderer\"\r\nimport logo from \"./images/logo.png\";\r\nexport default function ReceiptPDF({ productData,customerName }) {\r\n\r\n    const TotalPrice = productData.reduce((accumulator, currentValue) => accumulator += (currentValue.unitPrice * (currentValue.productWeight * currentValue.productUnit)), 0)\r\n    \r\n\r\n    const styles = StyleSheet.create({\r\n        body: {\r\n            paddingTop: 35,\r\n            paddingBottom: 65,\r\n            paddingHorizontal: 35,\r\n        },\r\n        header: {\r\n            fontSize: 12,\r\n            marginBottom: 20,\r\n            textAlign: 'center',\r\n            color: 'grey',\r\n        },\r\n        subHeader: {\r\n            fontSize: 12,\r\n            marginBottom: 20,\r\n            color: '#000',\r\n            display: 'flex',\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\"\r\n        },\r\n        tableHeader: {\r\n            padding: '3mm',\r\n            fontSize: 12,\r\n            textAlign: 'center',\r\n            color: '#000',\r\n            display: 'flex',\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            backgroundColor: \"#F7F7F6\",\r\n            borderRadius: \"1mm\"\r\n        },\r\n        tableCell: {\r\n            padding: '3mm',\r\n            fontSize: 12,\r\n            textAlign: 'center',\r\n            color: '#000',\r\n            display: 'flex',\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        tableTotalCell: {\r\n            padding: '3mm',\r\n            fontSize: 12,\r\n            textAlign: 'center',\r\n            color: '#000',\r\n            display: 'flex',\r\n            flexDirection: \"row\",\r\n            borderTop: \".1mm\",\r\n            justifyContent: \"flex-end\",\r\n        },\r\n        tablePaidCell: {\r\n            padding: '3mm',\r\n            fontSize: 12,\r\n            color: '#000',\r\n            display: 'flex',\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n        },\r\n        headerImg: {\r\n\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\"\r\n        },\r\n        image: {\r\n            marginVertical: 15,\r\n            width: 40,\r\n            height: 50,\r\n        },\r\n        quantity: {\r\n            marginLeft: \"1cm\"\r\n        },\r\n        subTotal: {\r\n            Width: \"1in\"\r\n        },\r\n        total: {\r\n            paddingHorizontal: \"1cm\"\r\n        },\r\n        pageNumber: {\r\n            position: 'absolute',\r\n            fontSize: 12,\r\n            bottom: 30,\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            color: 'grey',\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <Document>\r\n                <Page style={styles.body} orientation=\"landscape\">\r\n                    <Text style={styles.header} fixed>\r\n                        Customer Receipt\r\n                    </Text>\r\n                    <View style={styles.subHeader}>\r\n                        <Text style={styles.headerImg}>\r\n                            <Image\r\n                                style={styles.image}\r\n                                src={logo}\r\n                                fixed={true}\r\n                            />\r\n                        </Text>\r\n                        <Text\r\n                            style={styles.subtitle}\r\n                        >\r\n                            Date : 12/01/2022</Text>\r\n                    </View>\r\n                    <View style={styles.subHeader}>\r\n                        <Text style={styles.headerImg}>\r\n                            Customer Name : {customerName}\r\n                        </Text>\r\n                        <Text\r\n                            style={styles.subtitle}\r\n                        >\r\n                            Receipt Number : 12345</Text>\r\n                    </View>\r\n                    <View style={styles.tableHeader}>\r\n                        <Text style={styles.headerImg}>\r\n                            Bought Items :\r\n                        </Text>\r\n                        <Text>\r\n                            Quantity\r\n                        </Text>\r\n                        <Text style={styles.subtitle}>\r\n                             Unit Price\r\n                        </Text>\r\n                        <Text style={styles.subtitle}>\r\n                            Sub total\r\n                        </Text>\r\n                    </View>\r\n\r\n\r\n\r\n\r\n                    {\r\n                        productData.map((item) => {\r\n                            const { productName, productWeight, productUnit, unitPrice } = item\r\n                           \r\n                            return (\r\n                                <>\r\n                                    <View style={styles.tableCell}>\r\n                                        <Text style={styles.headerImg}>\r\n                                            {productName}\r\n                                        </Text>\r\n                                        <Text style={styles.quantity}>\r\n                                            {productWeight}kg\r\n                                        </Text>\r\n                                        <Text style={styles.subtitle}>\r\n                                            {`$${unitPrice}`}\r\n                                        </Text>\r\n                                        <Text style={styles.subtitle}>\r\n                                            {`$${unitPrice * productWeight}`}\r\n                                        </Text>\r\n                                    </View>\r\n\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                    <View style={styles.tableTotalCell}>\r\n                        <Text style={styles.total}>\r\n                            Total\r\n                        </Text>\r\n                        <Text style={styles.subTotal}>\r\n                            {`$${TotalPrice}`}</Text>\r\n                    </View>\r\n                    <View style={styles.tablePaidCell}>\r\n                        <Text style={styles.total}>\r\n                            Paid\r\n                        </Text>\r\n                        <Text style={styles.subTotal}>\r\n                            {`$${TotalPrice}`}</Text>\r\n                    </View>\r\n                    <View style={styles.tableTotalCell}>\r\n                        <Text style={styles.total}>\r\n                            Payable\r\n                        </Text>\r\n                        <Text style={styles.subTotal}>\r\n                            $0</Text>\r\n                    </View>\r\n\r\n\r\n\r\n\r\n                    <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\r\n                        `${pageNumber} / ${totalPages}`\r\n                    )} fixed />\r\n                </Page>\r\n            </Document>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport OrderInfo from './OrderInfo';\r\nimport * as BsIcons from \"react-icons/bs\"\r\nimport \"./styles/styles.css\";\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\nimport ReceiptPDF from './ReceiptPDF';\r\n\r\n\r\nexport default function CustomerManagement() {\r\n    const initialState = {\r\n        customerName:\"\",\r\n        productName: \"\",\r\n        productWeight: \"\",\r\n        productUnit: \"\",\r\n        unitPrice: \"\",\r\n\r\n    }\r\n\r\n    const [productData, setProductData] = useState([initialState])\r\n    const [viewPdf, setViewPdf] = useState(false)\r\n    const [viewForm, setViewForm] = useState(true)\r\n    \r\n    const createNewOrder = () => {\r\n        setViewForm(true)\r\n        setProductData([\r\n            ...productData,\r\n            initialState\r\n        ])\r\n        setViewPdf(false)\r\n    }\r\n \r\n    const deleteOrder = (index) => {\r\n        const UpdateData = productData.filter((item, i) => i !== index)\r\n        setProductData(UpdateData)\r\n    }\r\n    const onChangeHandler = ({ target: { name, value } }, index) => {\r\n        const updateOrder = productData.map((product, i) => index === i ?\r\n            { ...product, [name]: isNaN(value) ? value : Number(value) } : product\r\n        )\r\n        setProductData(updateOrder)\r\n    }\r\n    const submitHandler = () => {\r\n        setViewPdf(prev => !prev)\r\n        setViewForm(false)\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <main className='customerOrder'>\r\n                <section>\r\n                    {\r\n                        viewForm && (\r\n\r\n                            <>\r\n                                <div className=\"customer_field customer_name\">\r\n                                    <h3>Customer Name</h3>\r\n                                    <span className='customer_input'>\r\n                                        <input type=\"text\" name='customerName' placeholder=\"Md Ishaque\" onChange={onChangeHandler} />\r\n                                        <BsIcons.BsFillPersonPlusFill className='customer_icon' />\r\n                                    </span>\r\n                                </div>\r\n                                {\r\n                                    productData.map((item, index) => <OrderInfo key={index} onChangeHandler={onChangeHandler} index={index} deleteOrder={deleteOrder} item={item} />)\r\n                                }\r\n                            </>\r\n                        )\r\n                    }\r\n\r\n\r\n                </section>\r\n                <section className=\"addNewForm\">\r\n                    <button type='button' onClick={createNewOrder}>Add More</button>\r\n                    <button type='button' onClick={submitHandler}>Submit</button>\r\n                </section>\r\n\r\n                <section>\r\n                    {viewPdf && <PDFViewer style={{ width: \"100%\", height: \"90vh\" }}>\r\n                        <ReceiptPDF productData={productData} customerName=\"Md Imran\" />\r\n                    </PDFViewer>}\r\n                </section>\r\n            </main>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","\nimport { PDFViewer } from '@react-pdf/renderer';\nimport './App.css';\nimport CustomerManagement from './component/customer_management/CustomerManagement';\nimport ReceiptPDF from './component/customer_management/ReceiptPDF';\nimport ReceiptWeb from './component/customer_management/ReceiptWeb';\nimport PdfGeneratorV2 from './component/PdfGeneratorV2/PdfGeneratorV2'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CustomerManagement/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}